apiVersion: v1
kind: Namespace
metadata:
  name: devops
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: devops
  name: jenkins
  labels:
    name: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      name: jenkins
  template:
    metadata:
      name: jenkins
      labels:
        name: jenkins
    spec:
      terminationGracePeriodSeconds: 25
      serviceAccountName: jenkins
      nodeSelector: 
        kubernetes.io/hostname: cn-shenzhen.192.168.100.167
      containers:
        - name: jenkins
          image: jenkins/jenkins:lts-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 50000
              name: agent
              protocol: TCP
          resources:
            limits:
              cpu: 2
              memory: 4Gi
            requests:
              cpu: 0.5
              memory: 2Gi
          env:
            - name: LIMITS_MEMORY
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
                  divisor: 1Mi
            - name: JAVA_OPTS
              # value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1 -XshowSettings:vm -Dhudson.slaves.NodeProvisioner.initialDelay=0 -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
              value: -Xmx$(LIMITS_MEMORY)m -XshowSettings:vm -Dhudson.slaves.NodeProvisioner.initialDelay=0 -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
          livenessProbe:
            httpGet:
              path: /login
              port: 30080
            initialDelaySeconds: 60
            timeoutSeconds: 5
            failureThreshold: 12 # ~2 minutes
          readinessProbe:
            httpGet:
              path: /login
              port: 30080
            initialDelaySeconds: 60
            timeoutSeconds: 5
            failureThreshold: 12 # ~2 minutes
      securityContext:
        fsGroup: 1000
      volumes:
        - name: jenkins-home
          hostPath: 
            path: /data/devops/jenkins
            type: DirectoryOrCreate

---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: devops
spec:
  selector:
    name: jenkins
  type: NodePort
  ports:
    - name: http
      port: 30080
      targetPort: 30080
      nodePort: 30080
      protocol: TCP
    - name: agent
      port: 30081
      targetPort: 30081
      nodePort: 30081
      protocol: TCP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: devops
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: jenkins
  namespace: devops
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create","delete","get","list","patch","update","watch"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create","delete","get","list","patch","update","watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get","list","watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: jenkins
  namespace: devops
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: devops
  
 
#---
#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  name: jenkins
#  annotations:
#    nginx.ingress.kubernetes.io/ssl-redirect: "true"
#    kubernetes.io/tls-acme: "true"
#    # "413 Request Entity Too Large" uploading plugins, increase client_max_body_size
#    nginx.ingress.kubernetes.io/proxy-body-size: 50m
#    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
#    # For nginx-ingress controller < 0.9.0.beta-18
#    ingress.kubernetes.io/ssl-redirect: "true"
#    # "413 Request Entity Too Large" uploading plugins, increase client_max_body_size
#    ingress.kubernetes.io/proxy-body-size: 50m
#    ingress.kubernetes.io/proxy-request-buffering: "off"
#spec:
#  rules:
#  - http:
#      paths:
#      - path: /
#        backend:
#          serviceName: jenkins
#          servicePort: 80
#    host: jenkins..com
#  tls:
#  - hosts:
#    - jenkins.example.com
#    secretName: tls-jenkins
